// <auto-generated />
using System;
using CoffeeExpress.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeExpress.Migrations
{
    [DbContext(typeof(CoffeeEpxpressDBContext))]
    [Migration("20250401135624_InitializedMigration")]
    partial class InitializedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoffeeExpress.Models.Coffee", b =>
                {
                    b.Property<int>("IdCoffee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCoffee"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Roast")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SalesCount")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCoffee");

                    b.ToTable("Coffees");
                });

            modelBuilder.Entity("CoffeeExpress.Models.ShoppingCart", b =>
                {
                    b.Property<int>("IdShoppingCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdShoppingCart"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCoffee")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdShoppingCart");

                    b.HasIndex("IdCoffee");

                    b.HasIndex("IdUser");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("CoffeeExpress.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdUserRole")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("IdUser");

                    b.HasIndex("IdUserRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CoffeeExpress.Models.UserRole", b =>
                {
                    b.Property<int>("IdUserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserRole"));

                    b.Property<string>("UserRoleDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUserRole");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            IdUserRole = 1,
                            UserRoleDescription = "Role of customers who will buy",
                            UserRoleName = "Customer"
                        },
                        new
                        {
                            IdUserRole = 2,
                            UserRoleDescription = "Role of employees who will manage the stock",
                            UserRoleName = "Administrator"
                        });
                });

            modelBuilder.Entity("CoffeeExpress.Models.ShoppingCart", b =>
                {
                    b.HasOne("CoffeeExpress.Models.Coffee", "Coffee")
                        .WithMany()
                        .HasForeignKey("IdCoffee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeExpress.Models.User", "User")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoffeeExpress.Models.User", b =>
                {
                    b.HasOne("CoffeeExpress.Models.UserRole", "UserRole")
                        .WithMany("User")
                        .HasForeignKey("IdUserRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("CoffeeExpress.Models.User", b =>
                {
                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("CoffeeExpress.Models.UserRole", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
